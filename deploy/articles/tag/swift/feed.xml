<feed xmlns="http://www.w3.org/2005/Atom">
	<author>
		<name>
			Kevin Renskers
		</name>
	</author>
	<title type="text">Loopwerk</title>
	<id>https://www.loopwerk.io/articles/tag/swift/feed.xml</id>
	<link href="https://www.loopwerk.io/articles/tag/swift/feed.xml" rel="self">
	</link>
	<updated>2024-02-27T16:12:13Z</updated>
	<generator uri="https://github.com/loopwerk/Saga">
		Saga
	</generator>
	<entry>
		<title type="text">Saga 1.0.0 has been released</title>
		<id>https://www.loopwerk.io/articles/2021/saga-1-released/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-1-released/" rel="alternate">
		</link>
		<updated>2021-12-11T16:00:00Z</updated>
		<summary type="text">
			About ten months ago I wrote that I was confident that the API of Saga wasn&apos;t going to change a lot anymore, and that I&apos;d release 1.0.0. Well, it&apos;s taken a little bit longer than I expected back then, but 1.0.0 has finally been released!
		</summary>
	</entry>
	<entry>
		<title type="text">Vapor 4 vs. Django REST Framework</title>
		<id>https://www.loopwerk.io/articles/2021/vapor4-vs-drf/</id>
		<link href="https://www.loopwerk.io/articles/2021/vapor4-vs-drf/" rel="alternate">
		</link>
		<updated>2021-08-25T16:00:00Z</updated>
		<summary type="text">
			Over two years ago I wrote an article where I compared Vapor 3 to Django REST Framework. It&apos;s time for a rematch with Vapor 4.
		</summary>
	</entry>
	<entry>
		<title type="text">My one big complaint working with Vapor 4</title>
		<id>https://www.loopwerk.io/articles/2021/one-big-complaint-vapor4/</id>
		<link href="https://www.loopwerk.io/articles/2021/one-big-complaint-vapor4/" rel="alternate">
		</link>
		<updated>2021-07-16T16:00:00Z</updated>
		<summary type="text">
			I&apos;m trying out Vapor 4 for a side project, and one thing that I am constantly running into is the amount of boilerplate and copy-pasted code. Are there no better solutions for this?
		</summary>
	</entry>
	<entry>
		<title type="text">Interview with proglib.io</title>
		<id>https://www.loopwerk.io/articles/2021/interview-proglib/</id>
		<link href="https://www.loopwerk.io/articles/2021/interview-proglib/" rel="alternate">
		</link>
		<updated>2021-07-10T16:00:00Z</updated>
		<summary type="text">
			Recently I was interviewed for the Russian IT website proglib.io. Since it might be interesting for non-Russian speakers, here it is in the original English version.
		</summary>
	</entry>
	<entry>
		<title type="text">WWDC21 keynote review</title>
		<id>https://www.loopwerk.io/articles/2021/wwdc21-review/</id>
		<link href="https://www.loopwerk.io/articles/2021/wwdc21-review/" rel="alternate">
		</link>
		<updated>2021-06-06T16:00:00Z</updated>
		<summary type="text">
			A new year, a new WWDC with once again new iOS, iPadOS, macOS and watchOS releases. If you ask me, I think yearly releases are overkill and really not necessary; I’d rather have Apple split off features like Weather, Maps, Notes and more into...
		</summary>
	</entry>
	<entry>
		<title type="text">Mentee Question 5: What&apos;s the deal with coordinators?</title>
		<id>https://www.loopwerk.io/articles/2021/faq-coordinators/</id>
		<link href="https://www.loopwerk.io/articles/2021/faq-coordinators/" rel="alternate">
		</link>
		<updated>2021-03-09T16:00:00Z</updated>
		<summary type="text">
			A few weeks while ago in my how to get started article I mentioned coordinators in the “What architecture should I use?” section, and how they allow you to decouple your view controllers from one another, and improve the way you can test your code....
		</summary>
	</entry>
	<entry>
		<title type="text">Mentee Question 4: When to use PassthroughSubject and CurrentValueSubject?</title>
		<id>https://www.loopwerk.io/articles/2021/faq-passthroughsubject-currentvaluesubject/</id>
		<link href="https://www.loopwerk.io/articles/2021/faq-passthroughsubject-currentvaluesubject/" rel="alternate">
		</link>
		<updated>2021-02-24T16:00:00Z</updated>
		<summary type="text">
			That’s a great question! And actually one I asked myself too, when I just got started with Combine. Let’s first explain what PassthroughSubject and CurrentValueSubject are though. 
Subjects are a kind of publisher that you can subscribe to, but can...
		</summary>
	</entry>
	<entry>
		<title type="text">Mentee Question 3: How to know when multiple publishers completed?</title>
		<id>https://www.loopwerk.io/articles/2021/faq-promise-all-combine/</id>
		<link href="https://www.loopwerk.io/articles/2021/faq-promise-all-combine/" rel="alternate">
		</link>
		<updated>2021-02-21T16:00:00Z</updated>
		<summary type="text">
			In JavaScript-world, it&apos;s really easy to know when multiple promises completed: just use Promise.all. How do you do the same thing in Combine?
		</summary>
	</entry>
	<entry>
		<title type="text">A review of Markdown parsers for Swift</title>
		<id>https://www.loopwerk.io/articles/2021/review-markdown-parsers/</id>
		<link href="https://www.loopwerk.io/articles/2021/review-markdown-parsers/" rel="alternate">
		</link>
		<updated>2021-02-16T16:00:00Z</updated>
		<summary type="text">
			A hugely important part of any static site generator is of course the parsing of Markdown content. The default parser for Saga is Parsley, a custom wrapper around a cmark fork. While I am generally quite happy with it, there are some problems.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 7: updates &amp; the road to 1.0.0</title>
		<id>https://www.loopwerk.io/articles/2021/saga-7-updates/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-7-updates/" rel="alternate">
		</link>
		<updated>2021-02-12T16:00:00Z</updated>
		<summary type="text">
			In the past few days I’ve made some pretty substantial improvements to Saga, to make it work for me and my website, which is now built using Saga.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 6: replacing SwiftMarkdown</title>
		<id>https://www.loopwerk.io/articles/2021/saga-6-replacing-swiftmarkdown/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-6-replacing-swiftmarkdown/" rel="alternate">
		</link>
		<updated>2021-02-08T16:00:00Z</updated>
		<summary type="text">
			I&apos;ve already replaced my own SwiftMarkdown package...
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 5: replacing Ink and Splash</title>
		<id>https://www.loopwerk.io/articles/2021/saga-5-replacing-ink/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-5-replacing-ink/" rel="alternate">
		</link>
		<updated>2021-02-07T16:00:00Z</updated>
		<summary type="text">
			I&apos;ve replaced the Ink and Splash dependencies with my own SwiftMarkdown package.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 4: a complete redesign</title>
		<id>https://www.loopwerk.io/articles/2021/saga-4-complete-redesign/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-4-complete-redesign/" rel="alternate">
		</link>
		<updated>2021-02-02T16:00:00Z</updated>
		<summary type="text">
			An unexpectedly quick fourth article about Saga, after a complete redesign of the API.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 3: thoughts so far</title>
		<id>https://www.loopwerk.io/articles/2021/saga-3-thoughts-so-far/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-3-thoughts-so-far/" rel="alternate">
		</link>
		<updated>2021-02-01T16:00:00Z</updated>
		<summary type="text">
			In the third and final part of this series about Saga I&apos;m looking at the pros and cons of the current system and what I might want to change.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 2: API design</title>
		<id>https://www.loopwerk.io/articles/2021/saga-2-api-design/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-2-api-design/" rel="alternate">
		</link>
		<updated>2021-01-30T16:00:00Z</updated>
		<summary type="text">
			Part 2, where I&apos;m looking back at the current API of Saga.
		</summary>
	</entry>
	<entry>
		<title type="text">Building my own static site generator, part 1: inspiration &amp; goals</title>
		<id>https://www.loopwerk.io/articles/2021/saga-1-inspiration/</id>
		<link href="https://www.loopwerk.io/articles/2021/saga-1-inspiration/" rel="alternate">
		</link>
		<updated>2021-01-29T16:00:00Z</updated>
		<summary type="text">
			In part 1 of a series of articles I&apos;m looking at the inspiration behind my static site generator Saga, now available on Github.
		</summary>
	</entry>
	<entry>
		<title type="text">Swift generics and arrays</title>
		<id>https://www.loopwerk.io/articles/2021/swift-generics/</id>
		<link href="https://www.loopwerk.io/articles/2021/swift-generics/" rel="alternate">
		</link>
		<updated>2021-01-26T16:00:00Z</updated>
		<summary type="text">
			I’m in the very early stages of building my own static site generator in Swift. I want the library to provide a basic Page type, that the user can then extend with custom metadata, and I need to be able to put Pages with different kinds of metadata...
		</summary>
	</entry>
	<entry>
		<title type="text">Looking at the static site generator Publish</title>
		<id>https://www.loopwerk.io/articles/2021/static-site-publish/</id>
		<link href="https://www.loopwerk.io/articles/2021/static-site-publish/" rel="alternate">
		</link>
		<updated>2021-01-21T16:00:00Z</updated>
		<summary type="text">
			I&apos;m taking a look at the static site generator Publish, written in Swift.
		</summary>
	</entry>
	<entry>
		<title type="text">Mentee Question 2: How to get started</title>
		<id>https://www.loopwerk.io/articles/2021/faq-getting-started/</id>
		<link href="https://www.loopwerk.io/articles/2021/faq-getting-started/" rel="alternate">
		</link>
		<updated>2021-01-20T16:00:00Z</updated>
		<summary type="text">
			Resources for learning Swift and UIKit, what to build first, opinions on Unit Testing, and more.
		</summary>
	</entry>
	<entry>
		<title type="text">Mentee Question 1: UIKit or SwiftUI</title>
		<id>https://www.loopwerk.io/articles/2021/faq-uikit-vs-swiftui/</id>
		<link href="https://www.loopwerk.io/articles/2021/faq-uikit-vs-swiftui/" rel="alternate">
		</link>
		<updated>2021-01-19T16:00:00Z</updated>
		<summary type="text">
			My take on the very common question &quot;What should I learn or focus on? UIKit or SwiftUI?&quot;
		</summary>
	</entry>
</feed>