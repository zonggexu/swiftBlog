<feed xmlns="http://www.w3.org/2005/Atom">
	<author>
		<name>
			Kevin Renskers
		</name>
	</author>
	<title type="text">Loopwerk</title>
	<id>https://www.loopwerk.io/articles/tag/sveltekit/feed.xml</id>
	<link href="https://www.loopwerk.io/articles/tag/sveltekit/feed.xml" rel="self">
	</link>
	<updated>2024-02-27T16:12:13Z</updated>
	<generator uri="https://github.com/loopwerk/Saga">
		Saga
	</generator>
	<entry>
		<title type="text">Setting up a Debian 11 server for SvelteKit and Django</title>
		<id>https://www.loopwerk.io/articles/2023/setting-up-debian-11/</id>
		<link href="https://www.loopwerk.io/articles/2023/setting-up-debian-11/" rel="alternate">
		</link>
		<updated>2023-03-03T16:00:00Z</updated>
		<summary type="text">
			I recently had to set up a brand new server for a website running on SvelteKit and its API running on Django. I am a software developer and setting up servers and hosting isn&apos;t something I normally do, so I followed a bunch of different tutorials. In this article I want to combine all these tutorials, mostly for future me, but hopefully you&apos;ll find it useful as well.
		</summary>
	</entry>
	<entry>
		<title type="text">SvelteKit session refactor</title>
		<id>https://www.loopwerk.io/articles/2022/sveltekit-session-refactor/</id>
		<link href="https://www.loopwerk.io/articles/2022/sveltekit-session-refactor/" rel="alternate">
		</link>
		<updated>2022-08-22T16:00:00Z</updated>
		<summary type="text">
			SvelteKit version 1.0.0-next.415 removed the session object and store. Refactoring my project wasn&apos;t very straightforward, let&apos;s go over the changes.
		</summary>
	</entry>
	<entry>
		<title type="text">SvelteKit Architecture - the solution</title>
		<id>https://www.loopwerk.io/articles/2022/sveltekit-architecture/</id>
		<link href="https://www.loopwerk.io/articles/2022/sveltekit-architecture/" rel="alternate">
		</link>
		<updated>2022-04-21T16:00:00Z</updated>
		<summary type="text">
			Last August I wrote about trying to come up with the architecture for a SvelteKit app I was working on, and failing.  I&apos;m happy to say that I have found a solution for all my problems!
		</summary>
	</entry>
	<entry>
		<title type="text">Working around HttpOnly cookie problems in SvelteKit</title>
		<id>https://www.loopwerk.io/articles/2021/sveltekit-cookies-tokens/</id>
		<link href="https://www.loopwerk.io/articles/2021/sveltekit-cookies-tokens/" rel="alternate">
		</link>
		<updated>2021-12-24T16:00:00Z</updated>
		<summary type="text">
			When HttpOnly cookies didn&apos;t work as expected in my SvelteKit project I had to find a workaround.
		</summary>
	</entry>
	<entry>
		<title type="text">Architecting a SvelteKit app - and failing</title>
		<id>https://www.loopwerk.io/articles/2021/architecting-sveltekit/</id>
		<link href="https://www.loopwerk.io/articles/2021/architecting-sveltekit/" rel="alternate">
		</link>
		<updated>2021-08-14T16:00:00Z</updated>
		<summary type="text">
			I was working to architect a SvelteKit app so that it does as few requests as possible, from a central place, so that all subpages have access to the content. Sadly dealing with SSR makes it very hard to achieve my goals.
		</summary>
	</entry>
</feed>